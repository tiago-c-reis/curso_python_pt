# --- N√∫meros em Python - Fun√ß√µes Nativas | V√≠deo-Aula ---
#
# ‚ñ∂Ô∏è Canal YouTube: Automation and Data Science
#           url: https://www.youtube.com/channel/UCOGLG_-uQco3Z7YGXtbEbEg
#
#       üëâ  video: https://www.youtube.com/watch?v=MHNblk_fgQU
#
# üí° Dica: converta para coment√°rio as linhas de c√≥digo que n√£o ver representada na consola.
#          Exemplo: # print(canal)
#
# ‚úîÔ∏è Ajude o nosso canal de Educa√ß√£o:
#       Partilhe, Fa√ßa like e Comente.
#       Ajudar este canal √© ajudar toda a comunidade.
#
# ---

# 1-2: Fun√ß√£o min() e max()
a = 2.8
b = 10

valor_min = min(a, b)
valor_max = max(a, b)

print(valor_min)
print(valor_max)

# 3: Fun√ß√£o abs()
c = -2.5
d = 8.2
e = 5 + 2j

resultado = abs(c)  # subsitua a vari√°vel na fun√ß√£o abs para ver os diferentes resultados

print(resultado)

# 4: Fun√ß√£o round( , n)
f = 1.586

resultado = round(f)       # arrendonda f para um n√∫mero inteiro
print(resultado)

resultado = round(f, 2)    # arrendonda f para um n√∫mero com duas casas decimais
print(resultado)

# 4.1: A fun√ß√£o round() arredonda sempre para o valor inteiro par
g = 0.5

resultado = round(g)       # arrendonda g para 0 (entre 0 e 1, retorna 0 que √© par)
print(resultado)

g = 1.5

resultado = round(g)       # arrendonda g para 2 (entre 1 e 2, retorna 2 que √© par)
print(resultado)

# 5-6: pow() e divmod()
h = 10
i = 2

resultado = pow(h, i)   # o mesmo que h ** i
print(resultado)

resultado = divmod(h, i)    # podemos tamb√©m utilizar h // i para saber o quociente e h % i para saber o resto
